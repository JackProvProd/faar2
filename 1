
def func1(arg1, arg2):
    var59 = var5(arg2, arg1)
    var60 = ((-753 - arg1 - (arg1 - arg1 - 833) & var59 | (arg1 ^ var59) - var59) - arg1) - (((var59 ^ -613 - arg1) & (((var59 - 509 - arg2 ^ var59 & arg2) & arg1) ^ 480)) + arg2 & arg2)
    var61 = var60 | (687347957 | (((var59 | arg1 | ((arg1 | var60) & (var59 & var59))) - ((arg1 - 1637574182) + var59) | ((1675311324 | arg2) ^ 433 + arg1)) | arg1) | var59 ^ 1087608773) ^ -513 - arg1 ^ 550 | var59
    result = (-219 | 977340630 + (arg1 | (arg2 - (arg1 ^ ((arg1 | arg1) | var61) + arg1) ^ arg1)) | arg2) & arg2
    return result
def func4(arg6, arg7):
    def func5(arg8, arg9):
        var10 = -2104509110 ^ arg9 + arg7 | (((arg9 ^ 1334726934 & -258) & arg9) | -280563815 - arg8 - arg8)
        var11 = (var10 & (((var10 | arg7 ^ (((arg9 & arg9) + (((-337152812 & (arg8 | 969) ^ -467869374 ^ 320) + -715) ^ (var10 & 15))) & arg9 + arg7)) | arg7 + arg7) + arg9) + var10 - var10 | arg6) & arg8
        result = ((-466 ^ var10) - arg7 ^ (var10 | arg6) - arg6) & (1912725172 - 769) + -524 & var10 + var10 + var11
        return result
    var12 = func5(arg6, arg7)
    var50 = var15(arg7, arg6)
    var53 = class10()
    for var54 in xrange(1):
        var55 = var53.func11
        var55(var54, var54)
    var56 = (var50 + var50) & -804
    var57 = (859 & (var56 - arg7)) | (var56 ^ (((arg6 & var50 | var12) & var50) & 505))
    var58 = var12 | (var56 | (arg7 + (((803 ^ (var50 ^ var56) - (-805 ^ -1407692183) - arg6 + -2102209230) - -909 ^ 618 + var50 ^ 955 | -790) & -570) ^ var50) ^ arg6) | arg6 + arg7 ^ var57 ^ 156680119
    result = (var56 + arg7 | var12) | (var12 - (var50 & (var57 + arg6 | arg6) ^ arg6))
    return result
class class10(object):
    def func11(self, arg51, arg52):
        return 0
def func8(arg16, arg17):
    var44 = func9(arg16, arg17)
    var45 = var44 & arg17
    var46 = arg16 ^ var45
    var47 = (arg17 | var44) | var44
    var48 = 630 ^ 519 - 521
    var49 = 997 - ((781 & 1364807669) + var44 & ((((-830 | var46) & var48 - (arg17 | arg16) + var48 - -1463696897 + (-888 & (516 ^ 984588152 ^ 1734540997) ^ var48) & var48 - var48) - var48) + var46) + var47) + 587293274
    result = -941 + -764 ^ 264
    return result
def func9(arg18, arg19):
    var20 = (-834 & (844689609 - arg19)) | arg19
    var21 = -712822941 & 773 + (var20 & arg19)
    var22 = -499643945 ^ var20
    var23 = -327424349 ^ (arg18 | var21) + -786
    var24 = var20 ^ var21 + -1771960140
    if var22 < var20:
        var25 = (-733928392 | var20) ^ var24
    else:
        var25 = var22 - arg18 | var20
    var26 = var20 & arg18
    var27 = (var20 & (arg18 - var21)) | arg18
    var28 = var23 ^ ((arg18 - var22) & var21)
    var29 = var23 | arg19 - var22 | var27
    var30 = var29 | var28
    var31 = ((arg19 | var29) | -1218885611) & var20
    var32 = var22 ^ (var31 | var27 & arg19)
    var33 = var31 | var32 | var30 | var32
    var34 = -44 & var21
    var35 = var34 - var28 ^ arg19 + var23
    var36 = var21 - var31
    var37 = -182 | var28 ^ var31 | var34
    if var20 < var20:
        var38 = var33 - arg18
    else:
        var38 = 1332878576 & var21
    var39 = -1571726836 - var27 + var20 | arg18
    var40 = var23 | var31 | var24 ^ var36
    var41 = (var37 ^ (var30 | -533)) | var34
    var42 = var29 | (var20 + var36 & var31)
    var43 = var22 + var28 | var27 | arg18
    result = 113 - var36 - (((var32 | (var40 & var33) - var26 - var21 + var20 & var40) ^ var20) + var27) - var21
    return result
def func7():
    closure = [-9]
    def func6(arg13, arg14):
        closure[0] += func8(arg13, arg14)
        return closure[0]
    func = func6
    return func
var15 = func7()
def func3():
    closure = [-9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 62'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
